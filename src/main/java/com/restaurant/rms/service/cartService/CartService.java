//package com.restaurant.rms.service.cartService;
//import com.fasterxml.jackson.core.JsonProcessingException;
//import com.restaurant.rms.dto.request.CartItemDTO;
//import com.restaurant.rms.dto.request.CheckoutCartDTO;
//import com.restaurant.rms.dto.request.orderDTO.OrderDTO;
//import com.restaurant.rms.dto.request.orderDTO.OrderItemDTO;
//import com.restaurant.rms.entity.DiningTable;
//import com.restaurant.rms.enums.OrderStatus;
//import com.restaurant.rms.repository.DiningTableRepository;
//import com.restaurant.rms.service.orderService.OrderService;
//import com.restaurant.rms.util.RedisUtil;
//import jakarta.transaction.Transactional;
//import lombok.RequiredArgsConstructor;
//import lombok.extern.slf4j.Slf4j;
//import org.springframework.stereotype.Service;
//
//import java.math.BigDecimal;
//import java.util.List;
//import java.util.stream.Collectors;
//
//
//@Slf4j
//@Service
//@RequiredArgsConstructor
//public class CartService {
//
//    private final RedisUtil redisUtil;
//    private final DiningTableRepository diningTableRepository;
//    private final OrderService orderService;
//
//    private String getCartKey(String tableQr) {
//        return "cart:" + tableQr;
//    }
//
//    public List<CartItemDTO> getCart(String tableQr) {
//        return redisUtil.getCart(getCartKey(tableQr));
//    }
//
//    public void addToCart(String tableQr, CartItemDTO cartItem) {
//        if (cartItem.getMenuItemId() == null) {
//            throw new RuntimeException("üö® menuItemId kh√¥ng th·ªÉ null khi th√™m v√†o gi·ªè!");
//        }
//        log.info("‚ûï Th√™m m√≥n v√†o gi·ªè: {}", cartItem);
//        redisUtil.addToCart(getCartKey(tableQr), cartItem);
//    }
//
//    public void updateCart(String tableQr, List<CartItemDTO> updatedCart) {
//        log.info("üîÑ C·∫≠p nh·∫≠t gi·ªè h√†ng: {}", updatedCart);
//        redisUtil.updateCart(getCartKey(tableQr), updatedCart);
//    }
//
//    public void removeItemFromCart(String tableQr, int menuItemId) {
//        log.info("‚ùå X√≥a m√≥n {} kh·ªèi gi·ªè h√†ng", menuItemId);
//        redisUtil.removeItemFromCart(getCartKey(tableQr), menuItemId);
//    }
//
//    public void clearCart(String tableQr) {
//        log.info("üóë X√≥a to√†n b·ªô gi·ªè h√†ng c·ªßa b√†n {}", tableQr);
//        redisUtil.clearCart(getCartKey(tableQr));
//    }
//
//    @Transactional
//    public CheckoutCartDTO checkoutAndCreateOrder(String tableQr) throws JsonProcessingException {
//        log.info("üõí B·∫Øt ƒë·∫ßu checkout cho b√†n: {}", tableQr);
//
//        String key = getCartKey(tableQr);
//
//        // L·∫•y danh s√°ch m√≥n trong gi·ªè h√†ng (CartItemDTO)
//        List<CartItemDTO> cartItems = getCart(tableQr);
//        log.info("üìú Danh s√°ch m√≥n trong gi·ªè: {}", cartItems);
//
//        if (cartItems.isEmpty()) {
//            log.error("üö® Gi·ªè h√†ng tr·ªëng!");
//            throw new RuntimeException("Gi·ªè h√†ng tr·ªëng!");
//        }
//
//        // L·∫•y th√¥ng tin b√†n ƒÉn t·ª´ QR
//        DiningTable table = diningTableRepository.findByQrCode(tableQr)
//                .orElseThrow(() -> {
//                    log.error("üö® Kh√¥ng t√¨m th·∫•y b√†n ƒÉn v·ªõi QR: {}", tableQr);
//                    return new RuntimeException("B√†n kh√¥ng t·ªìn t·∫°i!");
//                });
//
//        log.info("üçΩ B√†n ƒÉn: {}", table);
//
//        // üî• Chuy·ªÉn ƒë·ªïi CartItemDTO ‚Üí OrderItemDTO
//        List<OrderItemDTO> orderItemDTOs = cartItems.stream()
//                .map(cartItem -> {
//                    // Debug xem menuItemId c√≥ null kh√¥ng
//                    if (cartItem.getMenuItemId() == null) {
//                        throw new RuntimeException("üö® menuItemId b·ªã null cho cartItem: " + cartItem);
//                    }
//                    return OrderItemDTO.builder()
//                            .menuItemId(cartItem.getMenuItemId())
//                            .quantity(cartItem.getQuantity())
//                            .price(cartItem.getPrice().multiply(BigDecimal.valueOf(cartItem.getQuantity())))
//                            .build();
//                }).collect(Collectors.toList());
//
//
//        // T√≠nh t·ªïng ti·ªÅn
//        BigDecimal totalPrice = orderItemDTOs.stream()
//                .map(OrderItemDTO::getPrice)  // L·∫•y gi√° t·ª´ OrderItemDTO
//                .reduce(BigDecimal.ZERO, BigDecimal::add);
//
//        if (totalPrice.compareTo(BigDecimal.ZERO) <= 0) {
//            throw new RuntimeException("üö® L·ªói: T·ªïng ti·ªÅn kh√¥ng h·ª£p l·ªá!");
//        }
//
//        log.info("üí∞ T·ªïng ti·ªÅn ƒë∆°n h√†ng: {}", totalPrice);
//
//        // üî• T·∫°o OrderDTO t·ª´ danh s√°ch OrderItemDTO
//        OrderDTO orderDTO = OrderDTO.builder()
//                .diningTableId(table.getDiningTableId())
//                .status(OrderStatus.PENDING.name())
//                .totalPrice(totalPrice)
//                .orderItems(orderItemDTOs)  // ƒê√∫ng ki·ªÉu d·ªØ li·ªáu
//                .build();
//
//        log.info("üì¶ T·∫°o ƒë∆°n h√†ng v·ªõi th√¥ng tin: {}", orderDTO);
//
//        // G·ªçi OrderService ƒë·ªÉ t·∫°o Order/SubOrder
//        OrderDTO createdOrder = orderService.createOrderOrSubOrder(orderDTO);
//
//        log.info("‚úÖ ƒê∆°n h√†ng ƒë√£ t·∫°o: {}", createdOrder);
//
//        // X√≥a gi·ªè h√†ng sau khi g·ª≠i ƒë∆°n
//        clearCart(tableQr);
//
//        return CheckoutCartDTO.builder()
//                .orderId(createdOrder.getId())  // L·∫•y t·ª´ OrderDTO
//                .diningTableId(createdOrder.getDiningTableId())
//                .status(createdOrder.getStatus())
//                .totalPrice(createdOrder.getTotalPrice())
//                .orderItems(createdOrder.getOrderItems())  // ƒê√∫ng ki·ªÉu List<OrderItemDTO>
//                .build();
//    }
//
//}
//
//
